version: '3.8'

services:
  # Backend API Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - API_URL=http://localhost:8000
      - DB_URL=sqlite:///ufdr.db
      - JWT_SECRET=dev-key-replace
      - ENVIRONMENT=development
    volumes:
      - ./backend:/app
      - backend_data:/app/data
    networks:
      - ufdr-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    environment:
      - VITE_API_URL=http://localhost:8000
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - ufdr-network
    depends_on:
      - backend
    restart: unless-stopped
    command: npm run dev

  # Database Service (PostgreSQL for production)
  # Uncomment when ready to switch from SQLite
  # database:
  #   image: postgres:15-alpine
  #   environment:
  #     POSTGRES_DB: ufdr_copilot
  #     POSTGRES_USER: ufdr_user
  #     POSTGRES_PASSWORD: ufdr_password
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   ports:
  #     - "5432:5432"
  #   networks:
  #     - ufdr-network
  #   restart: unless-stopped

  # Redis for caching and session storage
  # redis:
  #   image: redis:7-alpine
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data
  #   networks:
  #     - ufdr-network
  #   restart: unless-stopped
  #   command: redis-server --appendonly yes

volumes:
  backend_data:
    driver: local
  # postgres_data:
  #   driver: local
  # redis_data:
  #   driver: local

networks:
  ufdr-network:
    driver: bridge
